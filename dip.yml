# dip configuration file

version: "3.8"

compose:
  files:
    - docker-compose.yml
  project_name: sage

interaction:
  bash:
    description: Get a shell
    service: web
    command: /bin/bash
    compose:
      run_options: [no-deps]

  web_shell:
    description: Connect to the web service shell
    command: docker exec -it $(docker ps --filter ancestor=sage-web --format "{{.Names}}") bash

  server:
    description: Run Rails server
    service: web
    command: bundle exec rails server -b 0.0.0.0
    compose:
      run_options: [service-ports, use-aliases]

  webstart:
    description: Run Rails server
    service: web
    command: tail -f /dev/null
    compose:
      run_options: [service-ports, use-aliases]

  web_console:
    description: Run Rails server
    service: web
    command: rails c

  rake:
    description: Run Rake commands
    service: web
    command: bundle exec rake

  bundle:
    description: Run Bundler commands
    service: web
    command: bundle
    compose:
      run_options: [no-deps]

  psql:
    description: Run Postgres psql console
    service: db
    command: psql -h db -U postgres

  neo4j_shell:
    description: Run Neo4j cypher shell
    service: neo4j
    command: cypher-shell -u neo4j -p password

  rebuild_web:
    description: Rebuild the web service
    command: dip compose build web

  destory:
    description: Destroys all services
    # Note: This command is not typically used in production environments.
    # It is used here for demonstration purposes.
    # It will remove all containers, networks, and volumes defined in the compose file.   
    command: dip compose down --rmi all --volumes web && dip compose down --volumes

provision:
  # Note: This command will wipe out your db and start fresh. Use with caution.
  # - docker network inspect sage_default > /dev/null 2>&1 || docker network create sage_default
  - dip compose down --volumes
  - dip compose up -d db neo4j
  - dip bundle install
  - dip rake db:drop db:create db:migrate db:seed
